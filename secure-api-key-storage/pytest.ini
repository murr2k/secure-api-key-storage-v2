[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Addopts
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:test-reports/coverage-html
    --cov-report=xml:test-reports/coverage.xml
    --cov-fail-under=70
    --junit-xml=test-reports/junit.xml

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, requires services)
    performance: Performance and load tests
    security: Security-focused tests
    e2e: End-to-end tests (slowest, requires full environment)
    slow: Slow running tests
    api: API endpoint tests
    auth: Authentication tests
    rbac: Role-based access control tests
    audit: Audit logging tests
    crypto: Cryptography tests

# Minimum version
minversion = 6.0

# Test session timeout (in seconds)
timeout = 300

# Parallel execution
#-n auto  # Uncomment to enable parallel execution with pytest-xdist

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */venv/*
    */node_modules/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = test-reports/coverage-html

[coverage:xml]
output = test-reports/coverage.xml